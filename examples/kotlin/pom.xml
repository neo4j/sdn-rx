<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>org.neo4j.doc.springframework.data</groupId>
	<artifactId>spring-data-neo4j-rx-examples-kotlin</artifactId>
	<version>999-SNAPSHOT</version>

	<name>SDN⚡️RX Examples for Reactive Kotlin Spring Boot</name>
	<description>Demonstrating how to use SDN⚡️RX from within Spring Boot with Kotlin.</description>

	<properties>
		<java.version>11</java.version>
		<kotlin.version>1.3.72</kotlin.version>
		<maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
		<maven-failsafe-plugin.version>3.0.0-M3</maven-failsafe-plugin.version>
		<maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>
		<spring-data-neo4j-rx.version>${revision}${sha1}${changelist}</spring-data-neo4j-rx.version>
		<testcontainers.version>1.13.0</testcontainers.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.neo4j.springframework.data</groupId>
			<artifactId>spring-data-neo4j-rx-spring-boot-starter</artifactId>
			<version>${spring-data-neo4j-rx.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-kotlin</artifactId>
		</dependency>
		<dependency>
			<groupId>io.projectreactor.kotlin</groupId>
			<artifactId>reactor-kotlin-extensions</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-reactor</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.neo4j.springframework.data</groupId>
			<artifactId>spring-data-neo4j-rx-spring-boot-test-autoconfigure</artifactId>
			<version>${spring-data-neo4j-rx.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>neo4j-harness</artifactId>
					<groupId>org.neo4j.test</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>neo4j</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>kotlin-exampel</finalName>
		<plugins>
			<plugin>
				<groupId>com.github.ekryd.sortpom</groupId>
				<artifactId>sortpom-maven-plugin</artifactId>
				<version>2.8.0</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>sort</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<keepBlankLines>true</keepBlankLines>
					<nrOfIndentSpace>-1</nrOfIndentSpace>
					<sortProperties>true</sortProperties>
					<sortDependencies>groupId,artifactId</sortDependencies>
					<createBackupFile>false</createBackupFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- Those profiles are not relevant to the examples and are only needed for SDN/RX release chain. -->
	<profiles>
		<profile>
			<id>revisionMissing</id>
			<activation>
				<property>
					<name>!revision</name>
				</property>
			</activation>
			<properties>
				<revision>1.1.0</revision>
			</properties>
		</profile>
		<profile>
			<id>sha1Missing</id>
			<activation>
				<property>
					<name>!sha</name>
				</property>
			</activation>
			<properties>
				<sha1></sha1>
			</properties>
		</profile>
		<profile>
			<id>changelistMissing</id>
			<activation>
				<property>
					<name>!changelist</name>
				</property>
			</activation>
			<properties>
				<changelist></changelist>
			</properties>
		</profile>
	</profiles>
</project>
